####
# Auxiliary movie and image profile definitions, mostly for the media analysis
# services.
#
# ATTENTION:
#
# Do not change the identifier of the formats below. Media analysis and other
# services are relying on them.
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.input:
#     Track types for which this format is applicable.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
##

# Still image extraction for text analysis (ocr)
profile.text-analysis.http.name = still image for text extraction
profile.text-analysis.http.input = visual
profile.text-analysis.http.output = image
profile.text-analysis.http.suffix = .#{time}.png
profile.text-analysis.http.mimetype = image/png
profile.text-analysis.http.ffmpeg.command = -ss #{time} -i #{in.video.path} \
  -filter:v boxblur=1:1,curves=all=0.4/0#{space}0.6/1 \
  -frames:v 1 -pix_fmt:v gray -r 1 #{out.dir}/#{out.name}#{out.suffix}


# Still image conversion
profile.image-conversion.http.name = still image for text extraction
profile.image-conversion.http.input = visual
profile.image-conversion.http.output = image
profile.image-conversion.http.suffix = .tif
profile.image-conversion.http.mimetype = image/tiff
profile.image-conversion.http.ffmpeg.command = -f image2 -i #{in.video.path} #{out.dir}/#{out.name}#{out.suffix}

# Image to video
profile.image-movie.work.name = image to video
profile.image-movie.work.input = image
profile.image-movie.work.output = visual
profile.image-movie.work.suffix = -image-video.mp4
profile.image-movie.work.mimetype = video/mp4
profile.image-movie.work.ffmpeg.command = -loop 1 -i #{in.video.path} -c:v libx264 -r 30 -t #{time} -pix_fmt yuv420p #{out.dir}/#{out.name}#{out.suffix}

# Extract image for partial import operation
profile.import.preview.name = Extract an image
profile.import.preview.input = visual
profile.import.preview.output = image
profile.import.preview.suffix = -image.jpg
profile.import.preview.mimetype = image/jpeg
profile.import.preview.ffmpeg.command = -ss #{time} -i #{in.video.path} -r 1 -frames:v 1 #{out.dir}/#{out.name}#{out.suffix}

# Extract image by video frame number for partial import operation
profile.import.image-frame.name = Extract image by video frame number
profile.import.image-frame.input = visual
profile.import.image-frame.output = image
profile.import.image-frame.suffix = -image.jpg
profile.import.image-frame.mimetype = image/jpeg
profile.import.image-frame.ffmpeg.command = -i #{in.video.path} -filter:v select=eq(n\\,#{frame}) -r 1 -frames:v 1 #{out.dir}/#{out.name}#{out.suffix}

# Image conversation (png -> jpeg)
profile.image.png-to-jpeg.http.name = Convert PNG image to JPEG
profile.image.png-to-jpeg.http.input = image
profile.image.png-to-jpeg.http.output = image
profile.image.png-to-jpeg.http.suffix = .jpg
profile.image.png-to-jpeg.http.mimetype = image/jpeg
profile.image.png-to-jpeg.http.ffmpeg.command = -i #{in.video.path} #{out.dir}/#{out.name}#{out.suffix}